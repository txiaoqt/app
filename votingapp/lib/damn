import 'package:flutter/material.dart';
import 'package:your_project_name/supabase/auth/authCalls.dart';
import 'success_screen.dart';

class SignupScreen extends StatefulWidget {
  const SignupScreen({super.key});

  @override
  State<SignupScreen> createState() => _SignupScreenState();
}

class _SignupScreenState extends State<SignupScreen> {
  final _formKey = GlobalKey<FormState>();
  final _authService = SupabaseAuthService();

  final firstNameCtrl = TextEditingController();
  final lastNameCtrl = TextEditingController();
  final middleNameCtrl = TextEditingController();
  final emailCtrl = TextEditingController();
  final contactCtrl = TextEditingController();
  final usernameCtrl = TextEditingController();
  final passwordCtrl = TextEditingController();
  final addressCtrl = TextEditingController();
  final pinCtrl = TextEditingController();

  String? selectedDay, selectedMonth, selectedYear;
  String? selectedGender, selectedRegion, selectedProvince, selectedCity;

  bool isLoading = false;

  Future<void> _handleSignup() async {
    if (!_formKey.currentState!.validate()) return;

    setState(() => isLoading = true);

    try {
      final authResponse = await _authService.signUpWithEmail(
        email: emailCtrl.text,
        password: passwordCtrl.text,
      );

      final user = authResponse.user;
      if (user != null) {
        await _authService.insertUserDetails(
          userId: user.id,
          userData: {
            'first_name': firstNameCtrl.text,
            'last_name': lastNameCtrl.text,
            'middle_name': middleNameCtrl.text,
            'email': emailCtrl.text,
            'contact_number': contactCtrl.text,
            'username': usernameCtrl.text,
            'birthday': '$selectedYear-$selectedMonth-$selectedDay',
            'region': selectedRegion,
            'province': selectedProvince,
            'city': selectedCity,
            'address': addressCtrl.text,
            'pin': pinCtrl.text,
          },
        );

        Navigator.of(context).pushReplacement(
          MaterialPageRoute(builder: (_) => const SuccessScreen()),
        );
      }
    } catch (e) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Signup failed: $e')),
      );
    } finally {
      setState(() => isLoading = false);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: Form(
          key: _formKey,
          child: ListView(
            padding: const EdgeInsets.all(20),
            children: [
              TextFormField(
                controller: firstNameCtrl,
                decoration: const InputDecoration(labelText: 'First Name'),
                validator: (val) => val == null || val.isEmpty ? 'Required' : null,
              ),
              TextFormField(
                controller: lastNameCtrl,
                decoration: const InputDecoration(labelText: 'Last Name'),
                validator: (val) => val == null || val.isEmpty ? 'Required' : null,
              ),
              TextFormField(
                controller: emailCtrl,
                decoration: const InputDecoration(labelText: 'Email'),
                validator: (val) => val != null && val.contains('@') ? null : 'Enter a valid email',
              ),
              TextFormField(
                controller: passwordCtrl,
                decoration: const InputDecoration(labelText: 'Password'),
                obscureText: true,
                validator: (val) => val != null && val.length >= 6 ? null : 'Min 6 characters',
              ),
              const SizedBox(height: 16),
              ElevatedButton(
                onPressed: isLoading ? null : _handleSignup,
                child: isLoading
                    ? const CircularProgressIndicator()
                    : const Text('Sign Up'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}